-- 차 하나 가져오기




SELECT * FROM "BOARD_IMG";
SELECT * FROM "BOARD";

UPDATE "BOARD" SET BOARD_TITLE = '200 번째 게시글', BOARD_CONTENT = '아 뭐지'
WHERE BOARD_NO= 200;

UPDATE "BOARD" SET MEMBER_NO =1
WHERE MEMBER_NO = 3;

UPDATE "BOARD_IMG" SET IMG_ORIGINAL_NAME = '원본1.png' ,IMG_RENAME = 'test1.png'
WHERE IMG_NO = 1;

SELECT * FROM "MEMBER"
WHERE MEMBER_NO = 1;

SELECT * FROM "MEMBER"
WHERE MEMBER_NO = 3;

ALTER TABLE "BOARD_IMG" PARALLEL;
ALTER TABLE BOARD_IMG NOPARALLEL;

INSERT INTO BOARD_IMG  VALUES(SEQ_IMG_NO.NEXTVAL,          'dsadsad',          'dasdsa',         'dasdsa',         0,         300);

SELECT * FROM "BOARD_IMG";

	SELECT * FROM "BOARD" WHERE BOARD_NO = 200;

SELECT * FROM "MEMBER";

SELECT * FROM "COMMENT";

SELECT * FROM "BOARD";

SELECT * FROM "BOARD"
WHERE BOARD_TITLE = 'ㅇㅁㄴㅇ';

UPDATE "BOARD" SET
BOARD_DEL_FL = 'Y'
WHERE MEMBER_NO = 44;



COMMIT;

DELETE FROM  "BOARD"
WHERE BOARD_NO = 202;




 	
SELECT LEVEL, C.* FROM
(SELECT COMMENT_NO, COMMENT_CONTENT,
TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일"') COMMENT_WRITE_DATE,
BOARD_NO, MEMBER_NO, MEMBER_NICK_NAME, COMMENT_NO2, COMMENT_DEL_FL,PROFILE_IMG
FROM "COMMENT"
JOIN MEMBER USING(MEMBER_NO)
WHERE MEMBER_NO = 44) C
WHERE COMMENT_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
WHERE SUB.COMMENT_NO2 = C.COMMENT_NO
AND COMMENT_DEL_FL = 'N')
START WITH COMMENT_NO2 IS NULL
CONNECT BY PRIOR COMMENT_NO = COMMENT_NO2
ORDER SIBLINGS BY COMMENT_NO;

SELECT * FROM "COMMENT"
JOIN BOARD USING(MEMBER_NO)
WHERE MEMBER_NO = 44 AND COMMENT_DEL_FL = 'N' AND BOARD_DEL_FL = 'N';

SELECT *
FROM BOARD B
JOIN (SELECT * FROM "COMMENT" WHERE MEMBER_NO = 44) C1 USING(BOARD_NO)
WHERE COMMENT_DEL_FL = 'N' AND BOARD_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "COMMENT" C2
WHERE C2.COMMENT_NO2 = C1.COMMENT_NO
AND COMMENT_DEL_FL = 'N');

FOR



SELECT BOARD_NO, BOARD_WRITE_DATE, ITEM_NO , MEMBER_NO , READ_COUNT , BOARD_TITLE ,COMMENT_DEL_FL,
      BOARD_CONTENT , BOARD_DEL_FL , LIKE_COUNT , BOARD_UPDATE_DATE , COMMENT_NO, COMMENT_CONTENT,
      COMMENT_NO2, TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일"') COMMENT_WRITE_DATE
FROM BOARD B
JOIN (SELECT COMMENT_NO, COMMENT_NO2, BOARD_NO, COMMENT_WRITE_DATE, 
      COMMENT_DEL_FL, COMMENT_CONTENT
      FROM "COMMENT" WHERE MEMBER_NO = 44) C1 USING(BOARD_NO)
WHERE COMMENT_DEL_FL = 'N' AND BOARD_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "COMMENT" C2
WHERE C2.COMMENT_NO2 = C1.COMMENT_NO
AND COMMENT_DEL_FL = 'N')
START WITH COMMENT_NO2 IS NULL
CONNECT BY PRIOR COMMENT_NO = COMMENT_NO2
ORDER SIBLINGS BY COMMENT_NO;

SELECT 
    B.BOARD_TITLE,
    TO_CHAR(C.COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일"') AS COMMENT_WRITE_DATE,
    C.COMMENT_CONTENT,
  	B.BOARD_NO
FROM 
    "BOARD" B
JOIN 
    "COMMENT" C ON B.BOARD_NO = C.BOARD_NO
WHERE 
    C.MEMBER_NO = 44
    AND C.COMMENT_DEL_FL = 'N'
    AND B.BOARD_DEL_FL = 'N'
ORDER BY 
    C.COMMENT_WRITE_DATE DESC;
    
    SELECT * FROM "BOARD";
    
    SELECT * FROM "MEMBER";
    
     SELECT COUNT(*) FROM "COMMENT" C
				JOIN "MEMBER" A ON C.MEMBER_NO  = A.MEMBER_NO
				JOIN "BOARD" B USING(BOARD_NO)
				WHERE COMMENT_DEL_FL = 'N' AND A.MEMBER_NO = 44 AND BOARD_DEL_FL = 'N';

			SELECT * FROM "PAY";
		
		INSERT INTO "PAY" 
VALUES(1, 232, 'DAS', 'ASDASD');
		SELECT * FROM "RENT";
	
	DELETE FROM "PAY"
	WHERE PAY_NO = 1;

	CREATE SEQUENCE SEQ_PAY_NO 
	NOCACHE;

CREATE SEQUENCE SEQ_RENT_NO
NOCACHE;
	
	DELETE  FROM "RENT"
	WHERE RENT_NO = 3;
	
COMMIT;

ALTER TABLE PAY RENAME COLUMN TOTAL_AMOUNT2 TO TOTAL_AMOUNT;

ALTER TABLE PAY ADD TOTAL_AMOUNT2 NVARCHAR2(30);
SELECT * FROM "PAY";

COMMIT;

ALTER TABLE PAY DROP COLUMN TOTAL_AMOUNT;

DROP TABLE "PAY";

CREATE TABLE "PAY" (
	"PAY_NO"	NUMBER		NOT NULL,
	"TOTAL_AMOUNT"	NVARCHAR2(30)		NOT NULL,
	"ORDER_NAME"	NVARCHAR2(30)		NOT NULL,
	"PAYMENT_ID"	NVARCHAR2(30)		NOT NULL
);


CREATE TABLE "PAY2" (
	"PAY_NO"	NUMBER		NOT NULL,
	"TOTAL_AMOUNT"	NVARCHAR2(30)		NOT NULL,
	"ORDER_NAME"	NVARCHAR2(30)		NOT NULL,
	"PAYMENT_ID"	NVARCHAR2(30)		NOT NULL
);

SELECT * FROM "RENT";
SELECT * FROM "PAY";

SELECT SEQ_RENT_NO.CURRENTVAL FROM "DUAL";

ALTER TABLE "PAY" ADD CONSTRAINT "PK_PAY" PRIMARY KEY (
	"PAY_NO"
);
ALTER TABLE "PAY" MODIFY PAYMENT_ID NVARCHAR2(100);
COMMIT;

CREATE TABLE "PURCHASE" (
	"PURCHASE_NO"	NUMBER		NOT NULL,
	"PURCHASE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"PURCHASE_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PAY_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "PURCHASE"."PURCHASE_NO" IS '구매 번호(PK)';

COMMENT ON COLUMN "PURCHASE"."PURCHASE_DATE" IS '구매 예정 날짜';

COMMENT ON COLUMN "PURCHASE"."PURCHASE_DEL_FL" IS '구매 취소 여부 (Y/N)';

COMMENT ON COLUMN "PURCHASE"."MEMBER_NO" IS '회원 번호(FK)';

COMMENT ON COLUMN "PURCHASE"."PAY_NO" IS '결제 번호(PK)';

ALTER TABLE "PURCHASE" ADD CONSTRAINT "PK_PURCHASE" PRIMARY KEY (
	"PURCHASE_NO"
);

ALTER TABLE "PURCHASE" ADD CONSTRAINT "FK_MEMBER_TO_PURCHASE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "PURCHASE" ADD CONSTRAINT "FK_Pay_TO_PURCHASE_1" FOREIGN KEY (
	"PAY_NO"
)
REFERENCES "PAY" (
	"PAY_NO"
);


CREATE TABLE "PURCHASE_DETAIL" (
	"PURCHASE_DETAIL_NO"	NUMBER		NOT NULL,
	"PURCHASE_NO"	NUMBER		NOT NULL,
	"ITEM_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "PURCHASE_DETAIL"."PURCHASE_DETAIL_NO" IS '구매 상세 번호(PK)';

COMMENT ON COLUMN "PURCHASE_DETAIL"."PURCHASE_NO" IS '구매 번호(PK)';

COMMENT ON COLUMN "PURCHASE_DETAIL"."ITEM_NO" IS '상품 고유 번호(PK)';

ALTER TABLE "PURCHASE_DETAIL" ADD CONSTRAINT "PK_PURCHASE_DETAIL" PRIMARY KEY (
	"PURCHASE_DETAIL_NO"
);

ALTER TABLE "PURCHASE_DETAIL" ADD CONSTRAINT "FK_PURCHASE_TO_PURCHASE_DETAIL_1" FOREIGN KEY (
	"PURCHASE_NO"
)
REFERENCES "PURCHASE" (
	"PURCHASE_NO"
);

ALTER TABLE "PURCHASE_DETAIL" ADD CONSTRAINT "FK_ITEM_TO_PURCHASE_DETAIL_1" FOREIGN KEY (
	"ITEM_NO"
)
REFERENCES "ITEM" (
	"ITEM_NO"
);

ALTER

ALTER TABLE "ITEM" ADD CONSTRAINT ITEM_PK PRIMARY KEY ("ITEM_NO");

ALTER TABLE "BOARD" ;

ALTER TABLE "BOARD"
DROP CONSTRAINT FK_MEMBER_TO_BOARD_1;


ALTER TABLE "BOARD"
ADD CONSTRAINT FK_MEMBER_TO_BOARD_1
FOREIGN KEY (MEMBER_NO) 
REFERENCES "MEMBER"(MEMBER_NO) ON DELETE CASCADE;

SELECT * FROM "MEMBER";

SELECT * FROM "PAY";

SELECT 

SELECT PAY_NO, TOTAL_AMOUNT, ORDER_NAME 
FROM "PAY"
JOIN RENT USING(PAY_NO)
JOIN "MEMBER" USING(MEMBER_NO)
WHERE PAY_NO = (SELECT MAX(PAY_NO) FROM "PAY") 
AND MEMBER_NO = #{memberNo};

SELECT 
PAYMENT_ID,
PAY_NO, 
       TO_CHAR(TOTAL_AMOUNT, '999,999,999') AS TOTAL_AMOUNT, 
       ORDER_NAME 
FROM "PAY"
JOIN RENT USING(PAY_NO)
JOIN "MEMBER" USING(MEMBER_NO)
WHERE PAY_NO = (SELECT MAX(PAY_NO) FROM "PAY") 
AND MEMBER_NO = 1;

SELECT * FROM "PAY";
COMMIT;

ALTER TABLE "PAY" ADD "PAYMENT_METHOD" NVARCHAR2(50);

ALTER TABLE "PAY" DROP COLUMN PAYMENT_METHOD;

SELECT PAY_NO,  PAYMENT_ID,
TO_CHAR(TOTAL_AMOUNT, '999,999,999') AS TOTAL_AMOUNT, 
ORDER_NAME
FROM "PAY"
JOIN "PURCHASE" USING(PAY_NO)
JOIN "MEMBER" USING(MEMBER_NO)
WHERE PAY_NO = (SELECT MAX(PAY_NO) FROM "PAY") 
AND MEMBER_NO =  1;

SELECT COUNT(*) FROM "PAY"
JOIN "PURCHASE" USING(PAY_NO)
JOIN "MEMBER" USING(MEMBER_NO)
WHERE MEMBER_NO = 1;



SELECT * FROM "MEMBER";

SELECT * FROM 	"PAY";

-- 1번 회원 대여 총 금액
SELECT SUM(TOTAL_AMOUNT)
 		FROM PAY
 		JOIN "RENT" USING(PAY_NO)
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE MEMBER_NO = 1;
	
-- 1번 회원 구매 총 금액	
	SELECT SUM(TOTAL_AMOUNT)
 		FROM PAY
 		JOIN "PURCHASE" USING(PAY_NO)
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE MEMBER_NO = 1;
	
-- 1번 회원의 뱃지(뱃지 번호, 뱃지획득여부 조회) -- 11,12,13뱃지 Y로 값 바뀐지 확인하면돼 
	SELECT BADGE_NO, BADGE_FL  
	FROM "MEMBER_BADGE"
	WHERE MEMBER_NO= 1;

-- 1번 회원 뱃지 N으로 전체 변경
UPDATE "MEMBER_BADGE" SET
BADGE_FL = 'N'
WHERE MEMBER_NO= 1;

COMMIT;
 
SELECT CART_NO, ITEM_NO, CART_COUNT, (CAR_NAME) ITEM_NAME, (TOTAL_PRICE)PRICE, CATEGORY_CODE,
					TO_CHAR(START_DATE, 'YYYY/MM/DD') START_DATE, TO_CHAR(END_DATE, 'YYYY/MM/DD') END_DATE
		FROM "CART"
		JOIN "ITEM" USING (ITEM_NO)
		JOIN "CAR" USING (ITEM_NO)
		WHERE SALE_TYPE = 1
		AND MEMBER_NO = 1
		AND CATEGORY_CODE = 1
		ORDER BY 2;
	
	SELECT * FROM "MEMBER";
	

	
	SELECT * FROM "CART"
	JOIN "ITEM" USING(ITEM_NO)
	JOIN "CAR" USING(ITEM_NO);





INSERT INTO PAY (PAY_NO, TOTAL_AMOUNT, ORDER_NAME, PAYMENT_ID)   
SELECT SEQ_PAY_NO.NEXTVAL, 1, '123', '123' FROM DUAL
UNION
SELECT SEQ_PAY_NO.NEXTVAL, 1, '123', '123' FROM DUAL;

ROLLBACK;

SELECT * FROM "PAY";

 SELECT get_next_sequence_value(), '1', '123', '123' FROM DUAL;
    
INSERT ALL
  INTO PAY(PAY_NO, TOTAL_AMOUNT, ORDER_NAME, PAYMENT_ID) VALUES (get_next_sequence_value(), '1', '123', '123')
  INTO PAY(PAY_NO, TOTAL_AMOUNT, ORDER_NAME, PAYMENT_ID) VALUES (get_next_sequence_value(), '1', '123', '123')
SELECT * FROM DUAL;

CREATE OR REPLACE FUNCTION get_next_sequence_value
RETURN NUMBER
IS
  v_sequence_value NUMBER;
BEGIN
  SELECT SEQ_PAY_NO.NEXTVAL INTO v_sequence_value FROM DUAL;
  RETURN v_sequence_value;
END;



SELECT SEQ_PAY_NO.NEXTVAL FROM DUAL;

SELECT * FROM "PAY";
    
    
    

