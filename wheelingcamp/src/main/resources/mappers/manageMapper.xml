<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.wheelingcamp.manage.model.mapper.ManageMapper">
	
	<!--package 한 개 가져오기 resultMap-->
	<resultMap type="Package" id="package_rm">
	
		<!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
		
		<id property="packageNo" column="PACKAGE_NO" />
			<collection 
				property="itemList"
				select = "selectOnePackageItemList"
				column = "ITEM_NO"
				javaType="java.util.ArrayList"
				ofType = "Item"
			/>
			<collection property="itemImageList"
				select = "selectImageList"
				column = "ITEM_NO"
				javaType = "java.util.ArrayList"
				ofType = "ItemImage"
				/>
	</resultMap>
	
	<!-- 차 상품 이미지 리스트 resultMap -->
	<resultMap type="Car" id="car_rm">
		<id property="itemNo" column="ITEM_NO"/>

		<collection property="itemImageList"
				select = "selectImageList"
				column = "ITEM_NO"
				javaType = "java.util.ArrayList"
				ofType = "ItemImage"
		/>
	</resultMap>
	
	<!-- 용품 상품 이미지 리스트 resultMap -->
	<resultMap type="CampEquipment" id="equipment_rm">
		<id property="itemNo" column="ITEM_NO"/>
	
		<collection property="itemImageList"
				select = "selectImageList"
				column = "ITEM_NO"
				javaType = "java.util.ArrayList"
				ofType = "ItemImage"
		/>
	</resultMap>
	
	<select id="selectAllMember">
		SELECT *
		FROM MEMBER
	</select>
	
  	<update id="updateMember">
		 UPDATE "MEMBER" SET
	     MEMBER_ID = #{memberId},
	     MEMBER_NICK_NAME = #{memberNickName},
	     MEMBER_NAME = #{memberName},
	     MEMBER_PHONE_NO = #{memberPhoneNo},
	     MEMBER_ADDRESS = #{memberAddress},
	     MEMBER_DEL_FL = #{memberDelFl}
	     WHERE MEMBER_NO = #{memberNo}
  	</update>

 	<delete id="deleteMember">
		DELETE FROM "MEMBER" WHERE MEMBER_NO =#{memberNo}
	</delete>
	
	<insert id="insertMember">  	
		INSERT INTO "MEMBER" 
  		VALUES(
  		SEQ_MEMBER_NO.NEXTVAL,
  		#{memberId},
  		'$2a$10$pPLziy96YL/BHJR4RAa0GuryhH3qFp767g83LXYOMLUiuMPj5459e',
  		#{memberEmail},
  		#{memberNickName},
  		#{memberAddress},
  		DEFAULT,
  		'N',
  		#{memberName},
  		NULL,
  		#{memberPhoneNo},
  		#{memberBirth},
  		'N'
  	)
	</insert>
	
	<!-- *********************************************************************************** -->
	
	<!-- 모든 차 목록 탐색 -->
	<select id="selectCarAll">
		SELECT DISTINCT ITEM_NO, CATEGORY_NAME, ITEM_VIEW_COUNT , CAR_NAME , CAR_GRADE_NO, 
				CAR_GRADE_NAME, CAR_SLEEP_CAPACITY , CAR_PASSENGERS , CAR_RENT_PRICE , CAR_FUEL , 
				IMG_PATH || IMG_RENAME "THUMBNAIL"
		FROM CAR C
		JOIN CAR_GRADE USING(CAR_GRADE_NO)
		JOIN ITEM USING (ITEM_NO)
		JOIN ITEM_CATEGORY USING (CATEGORY_CODE)
		LEFT JOIN (SELECT * FROM ITEM_IMG WHERE IMG_ORDER = 0) USING(ITEM_NO)
		LEFT JOIN CAR_STOCK USING (ITEM_NO)
		WHERE CATEGORY_CODE = 1
		ORDER BY ITEM_NO
	</select>

  	<!--모든 캠핑용품 목록 탐색 -->
	<select id="selectCampEquipmentAll">
		SELECT ITEM_NO, CATEGORY_CODE, CATEGORY_NAME, ITEM_VIEW_COUNT,
				EQUIPMENT_CATEGORY_CODE, EQUIPMENT_CATEGORY_NAME, EQUIPMENT_NAME,
				EQUIPMENT_RENT_PRICE, EQUIPMENT_RENT_COUNT,
				EQUIPMENT_SELL_PRICE, EQUIPMENT_SELL_COUNT,
				IMG_PATH || IMG_RENAME "THUMBNAIL"
		FROM CAMP_EQUIPMENT
		JOIN EQUIPMENT_CATEGORY USING (EQUIPMENT_CATEGORY_CODE)
		JOIN ITEM USING (ITEM_NO)
		JOIN ITEM_CATEGORY USING (CATEGORY_CODE)
		LEFT JOIN (SELECT * FROM ITEM_IMG WHERE IMG_ORDER = 0) USING(ITEM_NO)
		ORDER BY ITEM_NO
	</select>
	
	<!-- 모든 패키지 목록 탐색 -->
	<select id="selectPackageAll">
		SELECT I.ITEM_NO, I.CATEGORY_CODE, CATEGORY_NAME, ITEM_VIEW_COUNT ,
				P.PACKAGE_PRICE, P.PACKAGE_NAME,
				IMG_PATH || IMG_RENAME "THUMBNAIL"
		FROM PACKAGE P
		JOIN ITEM I ON (P.PACKAGE_NO = I.ITEM_NO)
		JOIN ITEM_CATEGORY IC ON (IC.CATEGORY_CODE = I.CATEGORY_CODE)
		LEFT JOIN (SELECT * FROM ITEM_IMG WHERE IMG_ORDER = 0) II ON (P.PACKAGE_NO = II.ITEM_NO)
		ORDER BY ITEM_NO
	</select>
	
	<!--  -->
	<update id="updateCar">
		UPDATE CAR SET 
			CAR_NAME = #{carName}, 
			CAR_RENT_PRICE = #{carRentPrice},
			CAR_GRADE_NO = #{carGradeNo},
			CAR_SLEEP_CAPACITY = #{carSleepCapacity}
		WHERE ITEM_NO = #{itemNo}
	</update>
	
	<!--  -->
	<update id="updateCampEquipment">
		UPDATE CAMP_EQUIPMENT SET
			EQUIPMENT_CATEGORY_CODE = #{equipmentCategoryCode},
			EQUIPMENT_NAME = #{equipmentName},
			EQUIPMENT_RENT_PRICE = #{equipmentRentPrice}, 
			EQUIPMENT_RENT_COUNT = #{equipmentRentCount},
			EQUIPMENT_SELL_PRICE = #{equipmentSellPrice},
			EQUIPMENT_SELL_COUNT = #{equipmentSellCount}
		WHERE ITEM_NO = #{itemNo}
	</update>
	
	<!--  -->
	<update id="updatePackage">
		UPDATE PACKAGE SET
			PACKAGE_NAME = #{packageName},
			PACKAGE_PRICE = #{packagePrice}
		WHERE PACKAGE_NO = #{itemNo}
	</update>
	
	<!-- *********************************************************************************** -->
	<!--구매 주문 전체 조회-->
	<select id="selectAllPurchase">
		SELECT PAY_NO, ITEM_COUNT, PAYMENT_ID, PURCHASE_NO, TO_CHAR(PURCHASE_DATE,'YYYY-MM-DD') PURCHASE_DATE, PURCHASE_DEL_FL, MEMBER_NO, MEMBER_NAME, TOTAL_AMOUNT FROM PAY 
		JOIN PURCHASE USING("PAY_NO")
		JOIN MEMBER USING("MEMBER_NO")
	</select>
	
	<!--대여 전체 조회-->
	<select id="selectAllRent">
		SELECT PAY_NO, ITEM_COUNT,  RENT_NO, PAYMENT_ID, TO_CHAR(RENT_DATE,'YYYY-MM-DD') RENT_DATE,
		 TO_CHAR(EXPECT_DATE,'YYYY-MM-DD') EXPECT_DATE, RENT_DEL_FL, TO_CHAR(EXPIRE_DATE,'YYYY-MM-DD') EXPIRE_DATE, MEMBER_NO, MEMBER_NAME,TOTAL_AMOUNT FROM PAY 
		JOIN RENT USING("PAY_NO")
		JOIN MEMBER USING ("MEMBER_NO")
	</select>

	<!--구매 대여 삭제-->	
	<delete id="deletePay">
		DELETE FROM PAY WHERE PAY_NO = #{payNo}
	</delete>
	
	<!--구매 수정-->
	<update id="updatePurchase">
		UPDATE PURCHASE SET
		PURCHASE_DATE = #{purchaseDate},
		PURCHASE_DEL_FL = #{purchaseDelFl}
		WHERE PAY_NO = #{payNo}
	</update>
	
	<!--대여 수정-->
	<update id="updateRent">
		UPDATE RENT SET
		RENT_DATE = #{rentDate},
		EXPECT_DATE = #{expectDate},
		RENT_DEL_FL = #{rentDelFl},
		EXPIRE_DATE = #{expireDate}
		WHERE PAY_NO = #{payNo}
	</update>
	
	<!--구매/대여 수정-->
	<update id="updatePay">
		UPDATE PAY SET
		TOTAL_AMOUNT = #{totalAmount},
		ORDER_NAME = #{orderName}
		WHERE PAY_NO = #{payNo}
		</update>
		
	<!-- 구매 상세 내역 조회-->	
	<select id="selectOnePurchase">
		SELECT PURCHASE_DETAIL_NO, PURCHASE_NO, ITEM_NO, ITEM_COUNT, CATEGORY_CODE, EQUIPMENT_NAME,CAR_NAME, 
		PACKAGE_NAME, PAY_NO, CATEGORY_NAME, PURCHASE_DETAIL_DEL_FL 
		FROM PURCHASE_DETAIL p 
		NATURAL JOIN PURCHASE
		NATURAL JOIN ITEM_CATEGORY
		LEFT OUTER JOIN CAMP_EQUIPMENT USING ("ITEM_NO")
		LEFT OUTER JOIN CAR USING ("ITEM_NO")
		LEFT OUTER JOIN "PACKAGE"ON ("PACKAGE_NO" ="ITEM_NO")
		WHERE PAY_NO = #{payNo}
	</select>
	
	<!-- 대여 내역 상세 조회 -->
	<select id="selectOneRent">
		SELECT RENT_DETAIL_NO, RENT_NO, ITEM_NO, RETURN_FL, ITEM_COUNT, CATEGORY_CODE, CATEGORY_NAME ,EQUIPMENT_NAME, 
		CAR_NAME, PACKAGE_NAME, PAY_NO, CAR_STOCK_NO
		FROM RENT_DETAIL R
		LEFT OUTER JOIN RENT USING ("RENT_NO")
		LEFT OUTER JOIN ITEM_CATEGORY USING ("CATEGORY_CODE")
		LEFT OUTER JOIN CAMP_EQUIPMENT USING ("ITEM_NO")
		LEFT OUTER JOIN CAR USING ("ITEM_NO")
		LEFT OUTER JOIN "PACKAGE" ON ("PACKAGE_NO" ="ITEM_NO")
		LEFT OUTER JOIN (SELECT CAR_ID, CAR_LOCATION_NO, CAR_STOCK_NO FROM CAR_STOCK) USING ("CAR_STOCK_NO")
		WHERE PAY_NO = #{payNo}
	</select>
		
	<update id="updateOrderRentDetail">
		UPDATE RENT_DETAIL SET RETURN_FL = #{returnFl} WHERE RENT_DETAIL_NO = #{rentDetailNo}
	</update>
	
	<update id="updateOrderPurchaseDetail">
		UPDATE PURCHASE_DETAIL SET PURCHASE_DETAIL_DEL_FL=#{purchaseDetailDelFl} WHERE PURCHASE_DETAIL_NO = #{purchaseDetailNo}		
	</update>	
	
	
	<!--가입자수 가져오기-->
	<select id="memberCount">
		SELECT MEMBER_ENROLL_DATE, MEMBER_NO FROM 
		(SELECT TO_CHAR(MEMBER_ENROLL_DATE,'YYYY-MM-DD') MEMBER_ENROLL_DATE, COUNT( MEMBER_NO ) MEMBER_NO FROM MEMBER  
		GROUP BY TO_CHAR(MEMBER_ENROLL_DATE,'YYYY-MM-DD') ORDER BY MEMBER_ENROLL_DATE DESC)	
		<![CDATA[
			WHERE ROWNUM <=7
		]]>
		ORDER BY MEMBER_ENROLL_DATE ASC
	</select>
	
	<!--차 조회 수 넣기-->
	<update id="insertCarView">
		INSERT INTO ITEM_VIEW VALUES (SYSDATE, (SELECT ( (SELECT SUM(ITEM_VIEW_COUNT)  FROM ITEM WHERE CATEGORY_CODE=1 ) - 
		(SELECT SUM(ITEM_VIEW_COUNT) FROM ITEM_VIEW WHERE CATEGORY_CODE = 1))COUNT FROM DUAL), 1)
	</update>
	
	<!--캠핑용품 조회 수 넣기-->
	<update id="insertEquipmentView">
		INSERT INTO ITEM_VIEW VALUES (SYSDATE, (SELECT ( (SELECT SUM(ITEM_VIEW_COUNT)  FROM ITEM WHERE CATEGORY_CODE=2 ) - 
		(SELECT SUM(ITEM_VIEW_COUNT) FROM ITEM_VIEW WHERE CATEGORY_CODE =2))COUNT FROM DUAL), 2)
	</update>
	
	<!--패키지 조회 수 넣기-->
	<update id="insertPackageView">
				INSERT INTO ITEM_VIEW VALUES (SYSDATE, (SELECT ( (SELECT SUM(ITEM_VIEW_COUNT)  FROM ITEM WHERE CATEGORY_CODE=3 ) - 
		(SELECT SUM(ITEM_VIEW_COUNT) FROM ITEM_VIEW WHERE CATEGORY_CODE = 3))COUNT FROM DUAL), 3)
	</update>
	
	<select id="itemViewCount">
		SELECT ITEM_VIEW_COUNT, TO_CHAR(VIEW_DATE,'YYYY-MM-DD') VIEW_DATE, CATEGORY_CODE FROM (SELECT ITEM_VIEW_COUNT, VIEW_DATE, 
		CATEGORY_CODE FROM ITEM_VIEW ORDER BY VIEW_DATE DESC) 
		WHERE CATEGORY_CODE =#{categoryCode} AND 	
		<![CDATA[
			ROWNUM <=7
		]]> 
		ORDER BY VIEW_DATE ASC
	</select>
	
</mapper>
