<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.wheelingcamp.mypage.model.mapper.MyPageMapper">
	
	  <!-- 입력한 비밀번호와 현재 비밀번호와 같은지 확인 -->
	  <select id="checkPw">
		SELECT MEMBER_PW
		FROM "MEMBER"
		WHERE MEMBER_NO=#{memberNo}
	  </select>
	  
	  <!-- 회원 탈퇴 -->
	  <update id="secession">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO=#{memberNo}
	  </update>
	  
	  <!-- 비밀번호 변경-->
	  <update id="changePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_NO = #{memberNo}
	  </update>
	  
	  <!-- 내정보 수정-->
	  <update id="profile">
		UPDATE "MEMBER" SET
		MEMBER_EMAIL=#{memberEmail},
  		MEMBER_NICK_NAME=#{memberNickName},
  		MEMBER_ADDRESS=#{memberAddress},
  		MEMBER_NAME=#{memberName},
  		MEMBER_PHONE_NO=#{memberPhoneNo},
  		MEMBER_BIRTH=#{memberBirth}
		WHERE MEMBER_NO = #{memberNo}
	  </update>
	  
	  <!-- 프로필 이미지 변경 -->
	  <update id="changeProfileImg">
		UPDATE MEMBER SET
		PROFILE_IMG = #{profileImg}
		WHERE MEMBER_NO = #{memberNo}
	  </update>
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
<!-- ======================================================================================================================  -->
	  <!--  로그인한 사람 주문내역(대여) 봅아오기 -->
	  
 <select id="myOrderListBorrow">
SELECT
I.ITEM_NO,
I.CATEGORY_CODE, 
TO_CHAR(RE.RENT_DATE, 'YYYY.MM.DD') AS RENT_DATE,
TO_CHAR(RE.EXPECT_DATE, 'YYYY.MM.DD') AS EXPECT_DATE,
RED.RENT_DETAIL_NO AS RENT_DETAIL_NO, 
C.CAR_NAME AS CAR_NAME,
PA.PACKAGE_NAME AS PACKAGE_NAME,
CM.EQUIPMENT_NAME AS EQUIPMENT_NAME,
RE.RENT_DEL_FL AS RENT_DEL_FL
FROM "ITEM" I
LEFT JOIN RENT_DETAIL RED ON I.ITEM_NO = RED.ITEM_NO
LEFT JOIN RENT RE ON RE.RENT_NO = RED.RENT_NO
LEFT JOIN "MEMBER" M ON M.MEMBER_NO = RE.MEMBER_NO
LEFT JOIN CAR C ON C.ITEM_NO = RED.ITEM_NO
LEFT JOIN "PACKAGE" PA ON PA.PACKAGE_NO = RED.ITEM_NO
LEFT JOIN CAMP_EQUIPMENT CM ON CM.ITEM_NO = RED.ITEM_NO
WHERE M.MEMBER_NO = #{memberNo} AND RED.RETURN_FL = 'N'  AND RE.RENT_DEL_FL = 'N'
ORDER BY RENT_DATE DESC	  
</select>


<!--  로그인한 사람 구매내역 뽑아오기 -->
<select id="myOrderListPurchase">
SELECT
I.ITEM_NO,
I.CATEGORY_CODE, 
PUD.PURCHASE_DETAIL_NO AS PURCHASE_DETAIL_NO, 
CM.EQUIPMENT_NAME AS EQUIPMENT_NAME,
TO_CHAR(P.PURCHASE_DATE, 'YYYY.MM.DD') AS PURCHASE_DATE,
P.PURCHASE_DEL_FL AS PURCHASE_DEL_FL,
PUD.PURCHASE_DETAIL_DEL_FL AS PURCHASE_DETAIL_DEL_FL
FROM "ITEM" I
LEFT JOIN PURCHASE_DETAIL PUD ON PUD.ITEM_NO = I.ITEM_NO
LEFT JOIN PURCHASE P ON P.PURCHASE_NO = PUD.PURCHASE_NO 
LEFT JOIN "MEMBER" M1 ON M1.MEMBER_NO = P.MEMBER_NO 
LEFT JOIN CAMP_EQUIPMENT CM ON CM.ITEM_NO = PUD.ITEM_NO
WHERE M1.MEMBER_NO = #{memberNo} AND PUD.PURCHASE_DETAIL_DEL_FL = 'N' AND P.PURCHASE_DEL_FL = 'N'
ORDER BY P.PURCHASE_DATE DESC
</select>

<!--  로그인한 사람 대여 취소 목록 가져오기 -->
<select id="itemListBorrowCancle">
SELECT 
TO_CHAR(RE.RENT_DATE, 'YYYY.MM.DD') AS RENT_DATE,
TO_CHAR(RE.EXPECT_DATE, 'YYYY.MM.DD') AS EXPECT_DATE,
RED.RENT_DETAIL_NO AS RENT_DETAIL_NO, 
C.CAR_NAME AS CAR_NAME,
PA.PACKAGE_NAME AS PACKAGE_NAME,
CM.EQUIPMENT_NAME AS EQUIPMENT_NAME,
RE.RENT_DEL_FL AS RENT_DEL_FL,
RED.RETURN_FL AS RETURN_FL,
RED.RETURN_DATE AS RETURN_DATE
FROM "ITEM" I
LEFT JOIN RENT_DETAIL RED ON I.ITEM_NO = RED.ITEM_NO
LEFT JOIN RENT RE ON RE.RENT_NO = RED.RENT_NO
LEFT JOIN "MEMBER" M ON M.MEMBER_NO = RE.MEMBER_NO
LEFT JOIN CAR C ON C.ITEM_NO = RED.ITEM_NO
LEFT JOIN "PACKAGE" PA ON PA.PACKAGE_NO = RED.ITEM_NO
LEFT JOIN CAMP_EQUIPMENT CM ON CM.ITEM_NO = RED.ITEM_NO
WHERE M.MEMBER_NO = #{memberNo} AND (RED.RETURN_FL = 'Y'  OR RE.RENT_DEL_FL = 'Y')
ORDER BY RENT_DATE DESC
</select>

<!--  로그인한 사람 구매 취소 목록 가져오기  -->
<select id="itemListPurchaseCancle">
SELECT 
PUD.PURCHASE_DETAIL_NO AS PURCHASE_DETAIL_NO, 
CM.EQUIPMENT_NAME AS EQUIPMENT_NAME,
TO_CHAR(P.PURCHASE_DATE, 'YYYY.MM.DD') AS PURCHASE_DATE,
P.PURCHASE_DEL_FL AS PURCHASE_DEL_FL,
PUD.PURCHASE_DETAIL_DEL_FL AS PURCHASE_DETAIL_DEL_FL,
PUD.PURCHASE_CANCLE_DATE AS PURCHASE_CANCLE_DATE
FROM "ITEM" I
LEFT JOIN PURCHASE_DETAIL PUD ON PUD.ITEM_NO = I.ITEM_NO
LEFT JOIN PURCHASE P ON P.PURCHASE_NO = PUD.PURCHASE_NO 
LEFT JOIN "MEMBER" M1 ON M1.MEMBER_NO = P.MEMBER_NO 
LEFT JOIN CAMP_EQUIPMENT CM ON CM.ITEM_NO = PUD.ITEM_NO
WHERE M1.MEMBER_NO = #{memberNo} AND (PUD.PURCHASE_DETAIL_DEL_FL = 'Y' OR P.PURCHASE_DEL_FL = 'Y')
ORDER BY P.PURCHASE_DATE DESC
</select>

<!--  대여 취소 하기 -->
<update id="borrowListCancle">
UPDATE "RENT_DETAIL" SET
RETURN_FL = 'Y', RETURN_DATE = DEFAULT
WHERE RENT_DETAIL_NO = #{rentDetailNo}
</update>


<!--  구매 취소 하기 -->
<update id="purchaseListCancle">
UPDATE "PURCHASE_DETAIL" SET
PURCHASE_DETAIL_DEL_FL = 'Y' , PURCHASE_CANCLE_DATE = DEFAULT
WHERE PURCHASE_DETAIL_NO = #{purchaseDetailNo}
</update>


<select id="myOrderListRe">
SELECT 
PUD.PURCHASE_DETAIL_NO AS PURCHASE_DETAIL_NO, 
CM.EQUIPMENT_NAME AS EQUIPMENT_NAME,
TO_CHAR(P.PURCHASE_DATE, 'YYYY.MM.DD') AS PURCHASE_DATE,
P.PURCHASE_DEL_FL AS PURCHASE_DEL_FL,
PUD.PURCHASE_DETAIL_DEL_FL AS PURCHASE_DETAIL_DEL_FL
FROM "ITEM" I
LEFT JOIN PURCHASE_DETAIL PUD ON PUD.ITEM_NO = I.ITEM_NO
LEFT JOIN PURCHASE P ON P.PURCHASE_NO = PUD.PURCHASE_NO 
LEFT JOIN "MEMBER" M1 ON M1.MEMBER_NO = P.MEMBER_NO 
LEFT JOIN CAMP_EQUIPMENT CM ON CM.ITEM_NO = PUD.ITEM_NO
WHERE M1.MEMBER_NO = #{memberNo} AND PUD.PURCHASE_DETAIL_DEL_FL = 'N' AND P.PURCHASE_DEL_FL = 'N'
ORDER BY P.PURCHASE_DATE DESC
 </select>
 

<!--  대여 취소한거 철회  --> 
<update id="borrowDeleteCancle">
UPDATE "RENT_DETAIL" SET RETURN_FL = 'N' , RETURN_DATE = NULL
WHERE RENT_DETAIL_NO = #{rentDetailNo}
</update>	   
	   
<!--  구매 취소한거 철회 -->
<update id="purchaseDeleteCancle">
UPDATE "PURCHASE_DETAIL" SET PURCHASE_DETAIL_DEL_FL = 'N' , PURCHASE_CANCLE_DATE = NULL
WHERE PURCHASE_DETAIL_NO = #{purchaseDetailNo}
</update>	   
	   
	   
	   
<!-- ======================================================================================================================  -->	   
	   
	   <!-- 운전면허 데이터 insert -->
	   <insert id="insertLicenseData">
		 INSERT INTO "DRIVER_LICENSE"
		 VALUES(SEQ_DRIVER_LICENSE_NO.NEXTVAL,
			 	#{memberNo},
			 	#{licenseNo}, 
			  	#{driverLicenseDate},
			   	SYSDATE)
		 		
	   </insert>
	   
	   <!-- 로그인한 회원의 운전면허 변경하기 -->
	   <update id="updateLicenseData">
		 UPDATE "DRIVER_LICENSE" SET
		 LICENSE_NO=#{licenseNo},
		 DRIVER_LICENSE_DATE=#{driverLicenseDate}
		 WHERE MEMBER_NO=#{memberNo}	
	   </update>
	   
	   <!-- 로그인한 회원의 운전면허 정보 불러오기 -->
	   <select id="getMyLicense">
		 SELECT MEMBER_NO,LICENSE_NO,TO_CHAR(TO_DATE(DRIVER_LICENSE_DATE,'YYYYMMDD'),'YYYY.MM.DD') AS DRIVER_LICENSE_DATE
		 FROM "MEMBER" 
		 JOIN "DRIVER_LICENSE"  USING (MEMBER_NO)
		 WHERE MEMBER_NO =#{memberNo}
	   </select>

</mapper>
